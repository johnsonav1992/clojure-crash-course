; This is the Calva REPL Window.
; It's just a file, really, with some special treatment from Calva.
; Use it as a REPL input prompt if you like. (When the REPL is connected.)
; TIPS: The keyboard shortcut `ctrl+alt+o r` shows and focuses this window
; Please see https://calva.io/repl-window/ for more info.
; Happy coding! ♥️

; TIPS: As with any Clojure file when the REPL is connected:
; - `alt+enter` evaluates the current top level form.
; - `ctrl+enter` evaluates the current form.
; Special for this file:
; - `alt+up` and `alt+down` traverse up and down the REPL command history
;    when the cursor is after the last contents at the prompt
; 
; See also the Calva Inspector: https://calva.io/inspector/

PLEASE NOTE
We will update the default location of this file.
The new default location will be
  "<projectRootPath>/.calva/repl.calva-repl"
For now the legacy path is used by default.
To give yourself a smooth transition, you can opt in
to the change, by configuring this setting as false:
  "calva.useLegacyReplWindowPath"
and then add "**/.calva/repl.calva-repl" to your ".gitignore" file.


This file is configured as the output destination for all REPL output.
You can configure this with the setting:
  "calva.outputDestinations"


; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in: (cd /Users/Alex/Desktop/clojure-crash-course; lein update-in :dependencies conj '[nrepl,"1.3.1"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.55.4"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless)
; Using host:port 127.0.0.1:52945 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉clojure-crash-course.core꞉> 
"Please see https://calva.io/output/#about-stdout-in-the-repl-window
about why stdout printed to this file is prepended with `;` to be line comments."
clj꞉clojure-crash-course.core꞉> 
; Jack-in done.
clj꞉clojure-crash-course.core꞉> 
#'clojure-crash-course.lesson5-let-bindings/calculate-circle-area
clj꞉clojure-crash-course.lesson5-let-bindings꞉> 
78.53975
clj꞉clojure-crash-course.lesson5-let-bindings꞉> 
; Syntax error compiling at (src/clojure_crash_course/lesson5_let_bindings.clj:43:1).
; Unable to resolve symbol: format-person in this context
clj꞉clojure-crash-course.lesson5-let-bindings꞉> 
#'clojure-crash-course.lesson5-let-bindings/format-person
clj꞉clojure-crash-course.lesson5-let-bindings꞉> 
"Hello, John Doe. You are an adult."
clj꞉clojure-crash-course.lesson5-let-bindings꞉> 
#'clojure-crash-course.lesson5-let-bindings/compound-interest
clj꞉clojure-crash-course.lesson5-let-bindings꞉> 
1628.8946267774422
clj꞉clojure-crash-course.lesson5-let-bindings꞉> 
#'clojure-crash-course.lesson5-let-bindings/process-order
clj꞉clojure-crash-course.lesson5-let-bindings꞉> 
{:subtotal 45.24, :discount-amount 4.524, :tax-amount 3.25728, :final-total 43.97328}
clj꞉clojure-crash-course.lesson5-let-bindings꞉> 
#'clojure-crash-course.lesson5-let-bindings/analyze-coordinates
clj꞉clojure-crash-course.lesson5-let-bindings꞉> 
{:x 3, :y 4, :distance 5.0}
clj꞉clojure-crash-course.lesson5-let-bindings꞉> 
#'clojure-crash-course.lesson5-let-bindings/calculate-grade
clj꞉clojure-crash-course.lesson5-let-bindings꞉> 
{:scores [85 92 78 88 91], :total 434, :average 434/5, :letter-grade "B"}
clj꞉clojure-crash-course.lesson5-let-bindings꞉> 
#'clojure-crash-course.lesson5-let-bindings/clean-and-analyze-text
clj꞉clojure-crash-course.lesson5-let-bindings꞉> 
{:original "  Hello WORLD! This is a TEST.  ",
 :cleaned "hello world! this is a test.",
 :word-count 6,
 :char-count 28,
 :avg-word-length 14/3}
clj꞉clojure-crash-course.lesson5-let-bindings꞉> 
; Syntax error compiling at (src/clojure_crash_course/lesson5_let_bindings.clj:179:23).
; Unable to resolve symbol: celsius in this context
clj꞉clojure-crash-course.lesson5-let-bindings꞉> 
#'clojure-crash-course.lesson5-let-bindings/temperature-converter
clj꞉clojure-crash-course.lesson5-let-bindings꞉> 
{:celsius 25, :fahrenheit 77N, :kelvin 298.15}
clj꞉clojure-crash-course.lesson5-let-bindings꞉> 
{:celsius 30, :fahrenheit 86N, :kelvin 303.15}
clj꞉clojure-crash-course.lesson5-let-bindings꞉> 
{:celsius 30, :fahrenheit 86N, :kelvin 303.15}
clj꞉clojure-crash-course.lesson5-let-bindings꞉> 
#'clojure-crash-course.lesson5-let-bindings/calculate-cart
clj꞉clojure-crash-course.lesson5-let-bindings꞉> 
{:items [{:name "Apple", :price 1.5, :quantity 3} {:name "Bread", :price 2.99, :quantity 1}],
 :subtotal 7.49,
 :tax 0.5992000000000001,
 :total 8.0892}
clj꞉clojure-crash-course.lesson5-let-bindings꞉> 
{:items [{:name "Apple", :price 1.5, :quantity 3} {:name "Bread", :price 2.99, :quantity 1}],
 :subtotal 7.49,
 :tax 0.5992000000000001,
 :total 8.0892}
clj꞉clojure-crash-course.lesson5-let-bindings꞉> 
