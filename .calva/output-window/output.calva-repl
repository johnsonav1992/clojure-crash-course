; This is the Calva REPL Window.
; It's just a file, really, with some special treatment from Calva.
; Use it as a REPL input prompt if you like. (When the REPL is connected.)
; TIPS: The keyboard shortcut `ctrl+alt+o r` shows and focuses this window
; Please see https://calva.io/repl-window/ for more info.
; Happy coding! ♥️

; TIPS: As with any Clojure file when the REPL is connected:
; - `alt+enter` evaluates the current top level form.
; - `ctrl+enter` evaluates the current form.
; Special for this file:
; - `alt+up` and `alt+down` traverse up and down the REPL command history
;    when the cursor is after the last contents at the prompt
; 
; See also the Calva Inspector: https://calva.io/inspector/

PLEASE NOTE
We will update the default location of this file.
The new default location will be
  "<projectRootPath>/.calva/repl.calva-repl"
For now the legacy path is used by default.
To give yourself a smooth transition, you can opt in
to the change, by configuring this setting as false:
  "calva.useLegacyReplWindowPath"
and then add "**/.calva/repl.calva-repl" to your ".gitignore" file.


This file is configured as the output destination for all REPL output.
You can configure this with the setting:
  "calva.outputDestinations"


; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in: (cd /Users/Alex/Desktop/clojure-crash-course; lein update-in :dependencies conj '[nrepl,"1.3.1"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.55.4"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless)
; Using host:port 127.0.0.1:55081 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
nil
clj꞉clojure-crash-course.core꞉> 
( 1 1 )
; Execution error (ClassCastException) at clojure-crash-course.core/eval10255 (REPL:47).
; class java.lang.Long cannot be cast to class clojure.lang.IFn (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉clojure-crash-course.core꞉> 
(println "Hello, world!")
; Hello, world!
nil
clj꞉clojure-crash-course.core꞉> 
; (defn add [a b]
;   (+ a b))
; => #'clojure-crash-course.core/add
; clj꞉clojure-crash-course.core꞉>
; (add 1 2)
; => 3
clojure-crash-course.core/-main
; Syntax error compiling at (.calva/output-window/output.calva-repl:0:0).
; No such var: clojure-crash-course.core/-main
clj꞉clojure-crash-course.core꞉> 
(println (utils/add 1 2))
; Syntax error compiling at (.calva/output-window/output.calva-repl:65:10).
; No such namespace: utils
clj꞉clojure-crash-course.core꞉> 
(println (clojure-crash-course.utils/add 1 2))
; Syntax error (ClassNotFoundException) compiling at (.calva/output-window/output.calva-repl:69:10).
; clojure-crash-course.utils
clj꞉clojure-crash-course.core꞉> 
